/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}body{font-family:Noto Sans,sans-serif}.wrapper,body{height:100vh;background-color:#c59369}.header{margin:0 auto;width:1000px}.header__title{text-align:center;font-size:38px}.input{margin:65px auto;width:1000px}.input__content{width:100%;height:400px;padding:10px;border:1px solid #8399c1;font-size:1.2rem;line-height:140%;resize:none}.keyboard{position:fixed;bottom:0;left:0;background-color:#4b5f83;width:100vw}.keyboard__content{margin:0 auto;padding:10px 20px;max-width:80vw}.keyboard__close{visibility:visible;display:block;float:right;position:relative;top:15px;right:13px;width:30px;height:20px;cursor:pointer}.keyboard__close:after,.keyboard__close:before{content:"";position:absolute;width:100%;height:2px}.keyboard__close:after{background-color:#fff;transform:rotate(45deg)}.keyboard__close:before{background-color:#fff;transform:rotate(-45deg)}.keys{margin:0 auto;width:1000px;background-color:#b3b3b3}.keys__content{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:center;padding:10px}.btn{border-radius:7px;margin:2px}button{background-color:#fff;border:none;border-radius:30px;padding:15px 25px;margin:3px 0;cursor:pointer}span{font-size:1.3rem;font-weight:400}button:hover{background-color:#ffe6d1;color:#1d2d56;transition:all .3s ease 0s}button:active{transform:translate(1px,1px);animation-duration:21s;transition:all .2s ease 0s}.down-btn,.left-btn,.right-btn,.up-btn{width:15px}#Caps,#Shift,#Tab{margin-left:40px}#Ctrl{margin-left:256px}#Space{margin-right:40px;width:300px}@media (max-width:1200px){.keyboard__close{visibility:hidden}.keyboard{display:none}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/