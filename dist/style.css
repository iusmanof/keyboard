/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}body{margin:0 auto;width:60vw;background-color:#4b5f83;font-family:Roboto Condensed,sans-serif;font-size:2rem}h1{text-align:center;color:#e2b492}.input{width:60vw;height:20vh;resize:none}.keyboard{display:flex;flex-direction:column;margin-top:2vh;padding:10px;background-color:#b3b3b3}button{background-color:#fff;border-radius:5px;border:none;flex-grow:1;color:#434e62;margin:1px;cursor:pointer}button:hover{background-color:#e2d7a7;color:#1d2d56;transition:all .3s ease 0s}.active,button:active{background-color:#c58f68;transform:translate(1px,1px);animation-duration:21s;transition:all .2s ease 0s}.row{display:flex;min-height:8vh}#CapsLock,#ShiftLeft,#ShiftRight{position:relative}.togglePointer{display:inline-block;position:absolute;top:5px;right:6px;border:1px solid #b3b3b3;border-radius:50%;width:7px;height:7px}.togglePointer-active{background-color:#20d43e}#Space{flex-grow:9}#ShiftLeft{flex-grow:2}#Space:after{content:" "}#ArrowUp:after{content:"↑"}#ArrowLeft:after{content:"←"}#ArrowDown:after{content:"↓"}#ArrowRight:after{content:"→"}#sound{width:2.8rem;display:block;margin-left:auto;margin-right:auto;height:100%}@media(max-width:1000px){.input,body,h1{width:90vw;font-size:1rem}.row{min-height:5vh}.togglePointer{top:4px;right:4px;width:5px;height:5px}#sound{width:1.6rem}}@media(max-width:760px){.input,body,h1{width:90vw;font-size:1rem}.row{min-height:5vh}.togglePointer{top:4px;right:4px;width:5px;height:5px}#sound{width:1.6rem}}@media(max-width:500px){.input,body,h1{width:99vw;font-size:.8rem}.row{min-height:3vh}.togglePointer{top:2px;right:3px;width:1px;height:1px}#sound{width:1rem}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/